plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.1-SNAPSHOT'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'jacoco'
}

group = 'com.rmc'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/milestone' }
    maven { url 'https://repo.spring.io/snapshot' }
}

ext {
    set('springCloudVersion', "2023.0.0")
    set('springBootVersion', "3.2.0")
    set('lombokVersion', '1.18.30')
    set('springCloudStarterVersion', '4.1.0')
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-rest'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation "org.springframework.cloud:spring-cloud-starter-openfeign:$springCloudStarterVersion"
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    compileOnly "org.projectlombok:lombok:$lombokVersion"
    annotationProcessor "org.projectlombok:lombok:$lombokVersion"
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation "org.springframework.cloud:spring-cloud-contract-wiremock:$springCloudStarterVersion"
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        mavenBom "org.springframework.boot:spring-boot-dependencies:${springBootVersion}"
    }
}


tasks.named('test') {
    useJUnitPlatform()
}

jacocoTestReport {
    reports {
        xml.required = true
        html.required = true
    }

    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it,
                    exclude: ['com/rmc/currency_converter/CurrencyConverterApplication.class',
                              'com/rmc/currency_converter/config/**'])
        }))
    }
}